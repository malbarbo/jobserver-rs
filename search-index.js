var searchIndex = {};
searchIndex["jobserver"] = {"doc":"An implementation of the GNU make jobserver.","items":[[3,"Client","jobserver","A client of a jobserver",null,null],[3,"Acquired","","An acquired token from a jobserver.",null,null],[3,"HelperThread","","Structure returned from `Client::into_helper_thread` to manage the lifetime of the helper thread returned, see those associated docs for more info.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"client"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new jobserver initialized with the given parallelism limit.",0,{"inputs":[{"name":"usize"}],"output":{"name":"result"}}],[11,"from_env","","Attempts to connect to the jobserver specified in this process's environment.",0,{"inputs":[],"output":{"name":"option"}}],[11,"acquire","","Acquires a token from this jobserver client.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"configure","","Configures a child process to have access to this client's jobserver as well.",0,{"inputs":[{"name":"self"},{"name":"command"}],"output":null}],[11,"into_helper_thread","","Converts this `Client` into a helper thread to deal with a blocking `acquire` function a little more easily.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"request_token","","Request that the helper thread acquires a token, eventually calling the original closure with a token when it's available.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",2,{"inputs":[{"name":"self"}],"output":null}]],"paths":[[3,"Client"],[3,"Acquired"],[3,"HelperThread"]]};
initSearch(searchIndex);
